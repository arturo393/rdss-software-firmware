version: '3.4'
services:
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    image: rdss/frontend
    volumes:
      - ./apps/frontend/src:/opt/rdss/frontend
    ports:
      - 3000:3000
    restart: always
    depends_on:
      - database
      - backend
    command: npm run dev
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    image: rdss/backend
    volumes:
      - ./apps/backend/src:/opt/rdss/backend
    ports:
      - 4200:4200
    restart: always
    depends_on:
      - database
    command: npm start
  monitor:
    build:
      context: ./monitor
      dockerfile: Dockerfile
    image: rdss/monitor
    restart: always
    volumes:
      - ./monitor/src:/opt/rdss/monitor
    depends_on:
      - database
  database:
    image: mongo
    volumes:
      - ./database/config/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./database/data:/data/db:rw
    ports:
      - 27017-27019:27017-27019
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ch4Ng3m3
      MONGO_INITDB_DATABASE: rdss
